AWSTemplateFormatVersion: "2010-09-09"

Description: CloudFormation Custom Resources Stack

Metadata:
  Stack::Transform:
    DefaultDependencyMappings:
      - Provisioner

Parameters:
  Name:
    Type: String
    Description: Logical name of component/stack
  ProvisionerVersion:
    Type: String
    Description: Secrets provisioner S3 object version
    Default: latest
  LogRetention:
    Type: Number
    Description: Log retention in days
    Default: 30
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

Conditions:
  ProvisionerLatest:
    Fn::Equals:
    - Ref: ProvisionerVersion
    - latest

Resources:
  ProvisionerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: ProvisionerPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Sid: Provision
              Effect: Allow
              Action:
              - ssm:GetParameters
              - ssm:PutParameter
              - ssm:DeleteParameter
              - ssm:AddTagsToResource
              - ssm:ListTagsForResource
              Resource:
                Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/*
            - Sid: Encrypt
              Effect: Allow
              Action:
              - kms:Decrypt
              - kms:Encrypt
              Resource:
                Fn::ImportValue: CfnMasterKeyArn
            - Sid: ManageLambdaLogs
              Effect: Allow
              Action:
              - logs:CreateLogStream
              - logs:DescribeLogStreams
              - logs:PutLogEvents
              Resource:
                Fn::Sub: ${ProvisionerLogGroup.Arn}
  Provisioner:
    Type: AWS::Lambda::Function
    DependsOn:
      - ProvisionerLogGroup
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-${Name}-provisioner
      Description:
        Fn::Sub: ${AWS::StackName} ${Name} Provisioner
      Handler: secrets_provisioner.handler
      MemorySize: 128
      Runtime: python3.6
      Timeout: 300
      Code:
        S3Bucket:
          Fn::Sub: ${AWS::AccountId}-cfn-lambda
        S3Key: secretsProvisioner.zip
        S3ObjectVersion:
          Fn::If:
            - ProvisionerLatest
            - Ref: AWS::NoValue
            - Ref: ProvisionerVersion
      Role:
        Fn::Sub: ${ProvisionerRole.Arn}
  ProvisionerLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${AWS::StackName}-${Name}-provisioner
      RetentionInDays:
        Ref: LogRetention

Outputs:
  Provisioner:
    Description: Secrets Provisioner Function ARN
    Value:
      Fn::Sub: ${Provisioner.Arn}